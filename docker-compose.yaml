# docker-compose.yaml
version: "3.9"

services:
  db:
    image: postgres:15
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB} -h localhost -p 5432"]
      interval: 5s
      timeout: 5s
      retries: 5

  frontend:
    image: node:18-alpine
    working_dir: /frontend
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
    ports:
      - "3000:3000"
    command: sh -c "npm install && npm start"
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://localhost:3000"]
      interval: 5s
      timeout: 2s
      retries: 30
      start_period: 20s
    depends_on:
      - backend

  backend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DEV_MODE: "true"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "8010:8000"
    volumes:
      - ./backend/app:/app/app:cached
      - ./backend/migrations:/app/migrations:cached
      - ./backend/alembic.ini:/app/alembic.ini:cached
      - ./backend/dev-entrypoint.sh:/dev-entrypoint.sh:cached
    command: /dev-entrypoint.sh

volumes:
  db_data:
